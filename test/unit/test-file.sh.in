#!@SH_PROG@
# -*- shell-script -*-
# Test _Dbg_glob_filename
test_file_glob_filename()
{
    typeset filename
    filename=''
    _Dbg_glob_filename $shunit_file
    assertEquals '0' $?
    filename=${filename##*/}  
    assertEquals 'shunit2' $filename
    _Dbg_glob_filename ./${srcdir}shunit?
    assertEquals '0' $?
    filename=${filename##*/}  
    assertEquals 'shunit2' $filename
    _Dbg_glob_filename ${srcdir}abcdefg
    assertEquals '1' $?
    filename=${filename##*/}  
    assertEquals 'abcdefg' $filename
}

# Test _Dbg_adjust_filename
test_file_adjust_filename()
{
    typeset filename
    _Dbg_set_annotate=0
    _Dbg_set_basename=0
    filename=$(_Dbg_adjust_filename abc)
    assertEquals 'abc' $filename
    filename=$(_Dbg_adjust_filename /abc)
    assertEquals '/abc' $filename
    _Dbg_set_basename=1
    filename=$(_Dbg_adjust_filename /abc)
    assertEquals 'abc' $filename
}

# Test _Dbg_glob_filename
test_file_resolve_expand_filename()
{
    filename=$(_Dbg_resolve_expand_filename /)
    assertEquals '0' $?
    assertEquals '/' "$filename"
    filename=$(_Dbg_resolve_expand_filename .)
    assertEquals '0' $?
    assertEquals '/' "${filename:0:1}"
    filename=$(_Dbg_resolve_expand_filename ./fdafdsa)
    assertEquals '0' $?
    typeset -i len=${#filename}
    assertEquals '/fdafdsa' "${filename:len-8:len}"
    assertNotEquals '.' "${filename:len-9:len-8}"
}

abs_top_srcdir=@abs_top_srcdir@
abs_top_srcdir=${abs_top_srcdir%%/}/
. ${abs_top_srcdir}test/unit/helper.sh

. $abs_top_srcdir/init/pre.sh
. $abs_top_srcdir/lib/filecache.sh
. $abs_top_srcdir/lib/file.sh
set -- # reset $# so shunit2 doesn't get confused.

SHUNIT_PARENT=$0

srcdir=@srcdir@
srcdir=${srcdir%%/}/

# load shunit2
if [[ ${0##*/} == ${.sh.file##*/} ]] ; then
    . ${shunit_file}
fi

